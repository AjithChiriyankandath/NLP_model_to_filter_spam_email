## Author : Ajith Chiriyankandath Jose

## Import the necessary libraries and the dataset

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

spam_df = pd.read_csv("emails.csv")

#spam_df.head(10)

#spam_df.info()

#Visualize the dataset

spam_df.groupby('spam').describe()

spam_df['length'] = spam_df['text'].apply(len)
spam_df.head()

spam_df


spam_df['length'].plot(bins=100, kind='hist') 

spam_df.length.describe()


spam_df[spam_df['length'] == 43952]['text'].iloc[0]

#divide the messages into spam and ham

ham = spam_df[spam_df['spam']==0]

spam = spam_df[spam_df['spam']==1]

spam['length'].plot(bins=60, kind='hist') 

ham['length'].plot(bins=60, kind='hist') 

print( 'Spam percentage =', (len(spam) / len(spam_df) )*100,"%")

print( 'Ham percentage =', (len(ham) / len(spam_df) )*100,"%")

sns.countplot(spam_df['spam'], label = "Count") 

#CREATE TESTING AND TRAINING DATASET/DATA CLEANING

#REMOVE PUNCTUATION

import string
string.punctuation

#download stopwords Package to execute this command
from nltk.corpus import stopwords
stopwords.words('english')

# Let's define a pipeline to clean up all the messages 
# The pipeline performs the following: (1) remove punctuation, (2) remove stopwords

def message_cleaning(message):
    Test_punc_removed = [char for char in message if char not in string.punctuation]
    Test_punc_removed_join = ''.join(Test_punc_removed)
    Test_punc_removed_join_clean = [word for word in Test_punc_removed_join.split() if word.lower() not in stopwords.words('english')]
    return Test_punc_removed_join_clean
    
# Let's test the newly added function
spam_df_clean = spam_df['text'].apply(message_cleaning)

print(spam_df_clean[0])

print(spam_df['text'][0])

#APPLY COUNT VECTORIZER TO OUR MESSAGES LIST

from sklearn.feature_extraction.text import CountVectorizer
# Define the cleaning pipeline we defined earlier
vectorizer = CountVectorizer(analyzer = message_cleaning)
spamham_countvectorizer = vectorizer.fit_transform(spam_df['text'])

#print(vectorizer.get_feature_names())

#print(spamham_countvectorizer.toarray())  

#spamham_countvectorizer.shape






